---
type Pages = "Projects" | "Games" | "Engine" | "Persona";
type pageLinksType = { [key in Pages]: { ref: string; isActive: string } };

const isActive = (name: Pages) =>
  Astro.request.url.includes(name.toLowerCase()) ? "active" : "";

const pageLinks: pageLinksType = {
  Projects: { ref: "/projects", isActive: isActive("Projects") },
  Games: { ref: "/games", isActive: isActive("Games") },
  Engine: { ref: "/engine", isActive: isActive("Engine") },
  Persona: { ref: "/personal", isActive: isActive("Persona") },
};
---

<div class="Nav">
  <img alt="" src="/treeLogo.svg" id="logo" />
  <img alt="" src="/monke.svg" id="logoMonke" />
  <div class="test">
    <a href="/" id="goHome">
      <img alt="home page" src="/homeIcon.svg" />
    </a>
    <button></button>
  </div>
  <div class="headerLinks">
    {
      Object.entries(pageLinks).map((link) => (
        <a href={link[1].ref} class={link[1].isActive}>
          {link[0]}
        </a>
      ))
    }
  </div>
</div>

<style lang="scss">
  @import "../../../styles/vars";
  #goHome {
    align-self: center;
    position: relative;
    z-index: 150;
    img {
      width: 2rem;
      height: 2rem;
      @media (min-width: $midScreen) {
        width: 2.5rem;
        height: 2.5rem;
      }
    }
    @media (min-width: $smallScreen) {
      margin-inline: 1rem;
    }
  }
  .Nav {
    position: relative;
    padding-block: 1rem;
    height: fit-content;
    display: flex;
    justify-content: flex-end;
    @media (max-width: $smallScreen) {
      flex-direction: column;
    }
    .test {
      display: flex;
      justify-content: flex-end;
    }
    #logo {
      position: absolute;
      left: 0;
      top: 0;
      width: 15rem;
      height: 15rem;
      z-index: -1;

      pointer-events: none;
      transition: width 1s, height 1s;
      @media (max-width: $smallScreen) {
        // opacity: $branchesOpacity;
        width: 8rem;
        height: 8rem;
      }
      @media (max-width: $midScreen) and (min-width: $smallScreen) {
        width: 12rem;
        height: 12rem;
      }
    }

    #logoMonke {
      position: absolute;
      left: 3rem;
      top: 0.5rem;
      z-index: -1;
      width: 2rem;
      height: 2rem;
      transform: scaleX(-1);
      opacity: 1;
      animation: showUp 2s;
      filter: brightness(70%);
      @keyframes showUp {
        0% {
          opacity: 0;
        }
        100% {
          opacity: 1;
        }
      }

      @media (min-width: $smallScreen) {
        display: none;
      }
    }
    button {
      display: none;
      width: 3rem;
      height: 3rem;
      padding-right: 5rem;
      background: none;
      border: none;
      background-image: url("/appIcons/dropButton.svg");
      background-size: contain;
      background-repeat: no-repeat;
      background-position: center;
      transition: 0.4s;
      @media (max-width: $smallScreen) {
        display: flex;
        position: relative;
        z-index: 120;
      }
    }
    .headerLinks {
      display: flex;
      justify-content: flex-end;
      gap: 1rem;
      font-weight: 600;
      font-size: 1.5rem;
      padding-right: 2rem;
      @media (max-width: $smallScreen) {
        display: none;
        position: fixed;
        top: 0;
        left: 50%;
        height: 100%;
        transform: translateX(-50%);
        animation: showUp 0.5s;
        // background: $appBackground;
        backdrop-filter: blur(6px) brightness(0.7);
        z-index: 100;
        font-size: 2rem;
        width: 100%;
        @keyframes showUp {
          0% {
            opacity: 0;
          }
          100% {
            opacity: 1;
          }
        }
      }

      @media (min-width: $midScreen) {
        gap: 2rem;
        padding-right: 5rem;
        font-size: 2rem;
      }

      a {
        color: $primaryColor;
        text-decoration: none;
        transition: 0.5s;
        &:hover {
          color: $secondaryColor;
        }
      }
      .active {
        color: $secondaryColor;
        position: relative;
        &::after {
          content: "";
          position: absolute;
          top: 80%;
          left: 0;
          width: 100%;
          height: 50%;
          background-image: url("/underlineBranch.svg");
          background-repeat: no-repeat;
          background-position: center;
          background-size: contain;
          @media (max-width: $smallScreen) {
            top: 100%;
          }
        }
      }
    }

    .expended {
      @media (max-width: $smallScreen) {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
      }
    }
    .changeIcon {
      background-image: url("/appIcons/closeDropDown.svg");
    }
  }
</style>
<script>
  document.querySelector("button")?.addEventListener("click", () => {
    document.querySelector("button")!.classList.toggle("changeIcon");
    document.querySelector(".headerLinks")?.classList.toggle("expended");
  });
</script>
