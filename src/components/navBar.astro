---
import TreeLogo from "../svg/treeLogo.svg";

type Pages = "Projects" | "Games" | "Engine" | "Persona";
type pageLinksType = { [key in Pages]: { ref: string; isActive: string } };

const isActive = (name: Pages) =>
  Astro.request.url.includes(name.toLowerCase()) ? "active" : "";

const pageLinks: pageLinksType = {
  Projects: { ref: "/projects", isActive: isActive("Projects") },
  Games: { ref: "/games", isActive: isActive("Games") },
  Engine: { ref: "/engine", isActive: isActive("Engine") },
  Persona: { ref: "/personal", isActive: isActive("Persona") },
};
---

<div class="Nav">
  <img alt="" src={TreeLogo} />
  <button></button>
  <div class="headerLinks">
    {
      Object.entries(pageLinks).map((link) => (
        <a href={link[1].ref} class={link[1].isActive}>
          {link[0]}
        </a>
      ))
    }
  </div>
</div>

<style lang="scss">
  .Nav {
    position: relative;
    padding-block: 1rem;
    height: fit-content;
    img {
      position: absolute;
      left: 0;
      top: 0;
      width: 15rem;
      height: 15rem;
      z-index: -1;
      @media (max-width: 550px) {
        opacity: 0.4;
        width: 10rem;
        height: 10rem;
      }
    }
    button {
      display: none;
      margin-left: auto;
      width: 3rem;
      height: 3rem;
      padding-right: 5rem;
      background: none;
      border: none;
      background-image: url("./src/svg/dropButton.svg");
      background-size: contain;
      background-repeat: no-repeat;
      background-position: center;
      transition: 0.4s;
      @media (max-width: 550px) {
        display: flex;
      }
    }
    .headerLinks {
      display: flex;
      justify-content: flex-end;
      gap: 1rem;
      font-weight: 600;
      font-size: 1.5rem;
      padding-right: 3rem;
      @media (max-width: 550px) {
        display: none;
        animation: showUp 2s;
        @keyframes showUp {
          0% {
            opacity: 0;
          }
          100% {
            opacity: 1;
          }
        }
      }
      @media (min-width: 1000px) {
        gap: 2rem;
        padding-right: 5rem;
        font-size: 2rem;
      }

      a {
        color: hsla(226, 19%, 60%, 1);
        text-decoration: none;
        &:hover {
          color: hsla(226, 19%, 80%, 1);
        }
      }
      .active {
        color: hsla(226, 19%, 80%, 1);
        position: relative;
        &::after {
          content: "";
          position: absolute;
          top: 100%;
          left: 0;
          width: 100%;
          height: 50%;
          z-index: -1;
          background-image: url("./src/svg/underlineBranch.svg");
          background-repeat: no-repeat;
          background-position: center;
          background-size: contain;
        }
      }
    }

    .expended {
      @media (max-width: 550px) {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
      }
    }
    .changeIcon {
      background-image: url("./src/svg/closeDropDown.svg");
    }
  }
</style>
<script>
  document.querySelector("button")?.addEventListener("click", () => {
    document.querySelector("button")!.classList.toggle("changeIcon");
    document.querySelector(".headerLinks")?.classList.toggle("expended");
  });
</script>
