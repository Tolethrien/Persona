---
import Layout from "../../layouts/Layout.astro";
import { CollectionEntry, getCollection } from "astro:content";
import Tags from "../../components/astro/[project]/tags.astro";
import Source from "../../components/astro/[project]/source.astro";
import ImageModal from "../../components/astro/[project]/imagesModal.astro";
export async function getStaticPaths() {
  const blogEntries = await getCollection("projects");
  return blogEntries.map((entry) => ({
    params: { project: entry.slug },
    props: { entry },
  }));
}
interface Props {
  entry: CollectionEntry<"projects">;
}
const {
  entry: { data },
} = Astro.props;
---

<Layout pageName={data.title}>
  <div class="desktop">
    <div class="tags">
      <Tags tags={data.tags} />
    </div>
    <div class="main">
      <div class="content">
        <h2 class="padding">{data.title}</h2>
        <p class="padding">{data.description}</p>
      </div>
      <div class="other">
        <div class="imageContent">
          <div class="imageWrapper">
            <img class="projectPromoImg" src={data.images[0]} alt="ss" />
          </div>
        </div>
        <Source links={data.links} />
      </div>
    </div>
  </div>
  <!-- ============================ -->
  <div class="mobile">
    <h2 class="padding">{data.title}</h2>
    <div class="mobileContent">
      <img class="border" alt="" src="/roundMain.svg" />
      <Source links={data.links} />
      <p class="padding">{data.description}</p>
      <div class="imageContent">
        <div class="imageWrapper">
          <img class="projectPromoImg" src={data.images[0]} alt="ss" />
        </div>
      </div>
      <Tags tags={data.tags} />
    </div>
  </div>

  <ImageModal images={data.images} />
</Layout>
<script>
  const modal = document.getElementById("imagesModal") as HTMLDialogElement;
  Array.from(document.getElementsByClassName("imageWrapper"))?.forEach((e) =>
    e.addEventListener("click", () => {
      !modal?.open && modal.showModal();
    })
  );
</script>
<style lang="scss">
  @import "../../styles/vars.scss";

  .mobile {
    margin-top: 3rem;
    color: white;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-start;
    font-size: 0.8rem;

    @media (min-width: $smallScreen) {
      display: none;
    }
    .mobileContent {
      position: relative;
      width: 100%;
      .border {
        position: absolute;
        left: 0;
        top: 0;
        width: 40rem;
        pointer-events: none;
      }
    }
  }
  .desktop {
    display: flex;
    flex-grow: 1;
    margin-top: 10rem;
    font-size: 1rem;

    @media (max-width: $smallScreen) {
      display: none;
    }
    @media (max-width: $midScreen) {
      font-size: 0.7rem;
    }
    .tags {
      position: relative;
      width: 10rem;
      flex-shrink: 0;

      &::after {
        content: "";
        position: absolute;
        width: 4px;
        height: 80%;
        top: 0;
        right: -0.5rem;
        background-color: wheat;
      }
    }
    .main {
      display: flex;
      flex-direction: column;
      flex-grow: 1;
      @media (min-width: $midScreen) {
        flex-direction: row;
      }
      .content {
        flex-grow: 1;
        max-width: 70%;
        @media (max-width: $midScreen) {
          max-width: 90%;
        }
      }
      .other {
        display: flex;
        margin-top: 2rem;

        @media (min-width: $midScreen) {
          flex-direction: column;
          margin-top: 0;
        }
      }
    }
  }
  h2 {
    font-size: 3.5em;
    color: $secondaryColor;
  }
  p {
    font-size: 1.5em;
    color: $primaryColor;
    padding: 1rem;
    @media (max-width: $smallScreen) {
      padding: 0;
    }
  }
  .padding {
    margin-left: 1rem;
    @media (max-width: $smallScreen) {
      margin-inline: 0.5rem;
    }
  }
  .imageContent {
    display: flex;
    justify-content: center;
    flex-grow: 1;

    .imageWrapper {
      position: relative;
      width: 10rem;
      height: 10rem;
      cursor: pointer;
      transition: 1s;
      // transform: rotate(-2deg);
      @media (min-width: $midScreen) {
        width: 12rem;
        height: 12rem;
        transform: rotate(-1deg);
      }
      @media (max-width: $smallScreen) {
        margin-top: 2rem;
      }
      img {
        width: 100%;
        height: 100%;
        filter: blur(1px);
      }
      &::after {
        content: "";
        position: absolute;
        width: 2rem;
        height: 2rem;
        border: 3px dashed wheat;
        border-radius: 5px;
        right: 2%;
        bottom: 2%;
      }
      &::before {
        content: "";
        position: absolute;
        outline: 2px solid wheat;
        z-index: 10;
        width: 100%;
        border-radius: 8px;

        height: 100%;
      }
    }
  }
</style>
