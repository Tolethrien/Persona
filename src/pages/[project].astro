---
import Layout from "../layouts/Layout.astro";
import { CollectionEntry, getCollection } from "astro:content";
import Tags from "../components/astro/[project]/tags.astro";
import Source from "../components/astro/[project]/source.astro";
import ImageModal from "../components/astro/[project]/imagesModal.astro";
export async function getStaticPaths() {
  const blogEntries = await getCollection("projects");
  return blogEntries.map((entry) => ({
    params: { project: entry.slug },
    props: { entry },
  }));
}
interface Props {
  entry: CollectionEntry<"projects">;
}
const {
  entry: { data },
} = Astro.props;
---

<Layout pageName={data.title}>
  <div class="desktop">
    <div class="tags">
      <Tags tags={data.tags} />
    </div>
    <div class="main">
      <div class="content">
        <h2 class="padding">{data.title}</h2>
        <p class="padding">{data.description}</p>
      </div>
      <div class="other">
        <div class="imageWrapper">
          <img class="projectPromoImg" src={data.images[0]} alt="ss" />
        </div>
        <Source links={data.links} />
      </div>
    </div>
  </div>
  <!-- ============================ -->
  <div class="mobile">
    <h2 class="padding">{data.title}</h2>
    <div class="mobileContent">
      <img class="border" alt="" src="/roundMain.svg" />
      <Source links={data.links} />
      <p class="padding">{data.description}</p>
      <div class="imageWrapper">
        <img class="projectPromoImg" src={data.images[0]} alt="ss" />
      </div>
      <Tags tags={data.tags} />
    </div>
  </div>
  <ImageModal images={data.images} />
</Layout>
<script>
  const modal = document.getElementById("imagesModal") as HTMLDialogElement;
  Array.from(document.getElementsByClassName("projectPromoImg"))?.forEach((e) =>
    e.addEventListener("click", () => {
      !modal?.open && modal.showModal();
    })
  );
</script>
<style lang="scss">
  @import "../styles/vars.scss";

  .mobile {
    margin-top: 3rem;
    color: white;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    font-size: 0.8rem;

    @media (min-width: $smallScreen) {
      display: none;
    }
    .mobileContent {
      position: relative;
      .border {
        position: absolute;
        left: 0;
        top: 0;
        width: 40rem;
        pointer-events: none;
      }
      .imageWrapper {
        width: 100%;
        margin-top: 2rem;
        text-align: center;
      }
    }
  }
  .desktop {
    display: flex;
    flex-grow: 1;
    margin-top: 10rem;
    font-size: 1rem;

    @media (max-width: $smallScreen) {
      display: none;
    }
    @media (max-width: $midScreen) {
      font-size: 0.7rem;
    }
    .tags {
      position: relative;
      width: 10rem;
      flex-shrink: 0;

      &::after {
        content: "";
        position: absolute;
        width: 4px;
        height: 80%;
        top: 0;
        right: -0.5rem;
        background-color: white;
      }
    }
    .main {
      display: flex;
      flex-direction: column;
      @media (min-width: $midScreen) {
        flex-direction: row;
      }
      .content {
        flex-grow: 1;
        max-width: 70%;
      }
      .other {
        display: flex;

        @media (min-width: $midScreen) {
          flex-direction: column;
        }
      }
    }
  }
  h2 {
    font-size: 3.5em;
    color: $secondaryColor;
  }
  p {
    font-size: 1.5em;
    color: $primaryColor;
  }
  .padding {
    margin-left: 1rem;
    @media (max-width: $smallScreen) {
      margin-inline: 0.5rem;
    }
  }
  .imageWrapper {
    flex-grow: 1;
    img {
      width: 10rem;
      height: 10rem;
      border-radius: 8px;
    }
  }
</style>
